{"version":3,"sources":["GravityAnimating.svg","api.js","components/Popup/Popup.js","components/Comics/Comics.js","components/InputWrapper/InputWrapper.js","components/Pagination/Pagination.js","utils.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","url","URL","params","ts","apikey","hash","format","formatType","noVariants","hasDigitalIssue","Object","keys","forEach","key","searchParams","append","getComicsList","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","availableParamsArr","response","results","_ref2","offset","total","list","wrap","_context","prev","next","paramsKey","set","delete","fetch","sent","json","data","abrupt","stop","_x","apply","this","arguments","Popup","closePopup","comics","title","image","react_default","createElement","className","description","urls","map","link","index","href","type","onClick","Comics","Options","optionsValuesArr","val","value","InputWrapper","updateComics","limit","orderBy","titleStartsWith","React","createRef","onChange","ev","_ev$target","target","name","defineProperty","onSubmit","preventDefault","current","defaultValue","InputWrapper_Options","placeholder","ref","Pagination","handleClick","_getPager","getPageNumber","itemsPerPage","Math","ceil","currentPage","lastPage","pagerSize","middleOfPager","createOrderedArr","size","Array","from","el","orderedPagerSizeArr","pagesArr","concat","toConsumableArray","pagerArr","orderedArrBelowLastPage","reverse","getPager","e","pageNumber","innerHTML","matches","page","Title","Image","path","extension","alt","src","App","state","isLoading","comicsListParams","showPopup","getComicsData","newComicsListParams","_ref4","_args","length","undefined","_this","objectSpread","setState","popupTargetComic","targetComics","find","togglePopup","_this$state","components_InputWrapper_InputWrapper","assign","loader","Fragment","components_Comics_Comics","id","App_Image","thumbnail","components_Pagination_Pagination","components_Popup_Popup","text","App_Title","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8d3c7f12.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GravityAnimating.34068f26.svg\";","let url = new URL(`https://gateway.marvel.com/v1/public/comics`), //holder path for comics without images\n  params = {\n    ts: '1',\n    apikey: '1136faa63131cec339ae63058b627b70',\n    hash: '7abf5f031a9f3f0031ac8c51fcfe8da0',\n    format: 'comic',\n    formatType: 'comic',\n    noVariants: true,\n    hasDigitalIssue: false,\n  };\nObject.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n\nexport const getComicsList = async params => {\n  const availableParamsArr = ['orderBy', 'titleStartsWith', 'limit', 'offset'];\n\n  await availableParamsArr.forEach(paramsKey =>\n    !params[paramsKey]\n      ? url.searchParams.delete(paramsKey)\n      : url.searchParams.set(paramsKey, params[paramsKey]),\n  );\n  const response = await fetch(url);\n  const results = await response.json();\n  const { offset, total } = await results.data;\n  const list = await results.data.results;\n  return { list, offset, total };\n};\n","import React from 'react';\nimport './style.scss';\n\nconst Popup = ({ closePopup, comics, title, image }) => (\n  <div className=\"popup\">\n    <div className=\"popup_inner\">\n      <div className=\"popup_inner-left\">{image}</div>\n      <div className=\"popup_inner-right\">\n        {title}\n        <p>{comics.description}</p>\n        <div className=\"popup_inner-links\">\n          {comics.urls.map((link, index) => (\n            <a key={index} href={link.url}>\n              {link.type}\n            </a>\n          ))}\n        </div>\n      </div>\n      <button onClick={closePopup}>close me</button>\n    </div>\n  </div>\n);\n\nexport default Popup;\n","import React from 'react';\nimport './style.scss';\n\nconst Comics = ({ image }) => (\n  <div className=\"comics-wrapper\">\n    <div className=\"image\">{image}</div>\n  </div>\n);\n\nexport default Comics;\n","import React from 'react';\nimport './style.scss';\n\nconst Options = ({ optionsValuesArr, description }) =>\n  optionsValuesArr.map(val => (\n    <option key={val} value={val}>\n      {description}: {val}\n    </option>\n  ));\nconst InputWrapper = ({ updateComics, limit, orderBy }) => {\n  let titleStartsWith = React.createRef();\n  const onSubmit = ev => {\n    ev.preventDefault();\n    updateComics({ titleStartsWith: titleStartsWith.current.value });\n  };\n  const onChange = ev => {\n    const { name, value } = ev.target;\n    updateComics({ [name]: value });\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <select\n        onChange={onChange}\n        defaultValue={orderBy}\n        className=\"search__item search__select\"\n        name=\"orderBy\"\n      >\n        <Options\n          optionsValuesArr={['modified', '-modified', 'title', '-title']}\n          description=\"Order by\"\n        />\n      </select>\n      <select\n        onChange={onChange}\n        defaultValue={limit}\n        className=\"search__item search__select\"\n        name=\"limit\"\n      >\n        <Options\n          optionsValuesArr={[10, 20, 30, 40, 50]}\n          description=\"Comics per page\"\n        />\n      </select>\n      <input\n        className=\"search__item search__input\"\n        placeholder=\"title starts with .....\"\n        ref={titleStartsWith}\n      />\n      <button name=\"button\" className=\"search__item search__button\">\n        search\n      </button>\n    </form>\n  );\n};\nexport default InputWrapper;\n","import React from 'react';\nimport { getPager } from '../../utils';\nimport './style.scss';\n\nconst Pagination = ({ limit, offset, total, handleClick }) => {\n  if (total && limit && total > limit) {\n    const { pagesArr, currentPage } = getPager(limit, offset, total);\n\n    const onClick = e => {\n      const pageNumber = e.target.innerHTML;\n      if (\n        e.target.matches('li') &&\n        pageNumber !== '...' &&\n        // eslint-disable-next-line\n        pageNumber != currentPage\n      ) {\n        handleClick({ offset: (pageNumber - 1) * limit });\n      }\n    };\n\n    return (\n      <ul className=\"pagination_list\" onClick={onClick}>\n        {pagesArr.map((page, index) => {\n          return page === currentPage ? (\n            <li className=\"pagination_selected-list-item\" key={index}>\n              {page}\n            </li>\n          ) : (\n            <li key={index}>{page}</li>\n          );\n        })}\n      </ul>\n    );\n  } else {\n    return null;\n  }\n};\nexport default Pagination;\n","export const getPager = (limit, offset, total) => {\n  const getPageNumber = itemsPerPage => Math.ceil(itemsPerPage / limit);\n  let currentPage = getPageNumber(offset) + 1;\n  const lastPage = getPageNumber(total);\n  let pagerSize = 5;\n  pagerSize = pagerSize % 2 ? pagerSize++ : pagerSize;\n  const middleOfPager = Math.ceil(pagerSize / 2);\n  const createOrderedArr = size =>\n    Array.from(new Array(size)).map((el, index) => index + 1);\n  const orderedPagerSizeArr = createOrderedArr(pagerSize);\n  if (lastPage < 1) {\n    return { pagesArr: [], currentPage };\n  }\n  if (1 <= lastPage && lastPage <= pagerSize) {\n    return createOrderedArr(lastPage);\n  }\n  if (lastPage > pagerSize) {\n    if (currentPage <= middleOfPager) {\n      return {\n        pagesArr: [...orderedPagerSizeArr, '...', lastPage],\n        currentPage,\n      };\n    }\n    let pagerArr = orderedPagerSizeArr.map(\n      el => currentPage - middleOfPager + el,\n    );\n\n    if (currentPage === middleOfPager + 1) {\n      return { pagesArr: [1, ...pagerArr, '...', lastPage], currentPage };\n    }\n\n    if (currentPage === lastPage - middleOfPager) {\n      return { pagesArr: [1, '...', ...pagerArr, lastPage], currentPage };\n    }\n    let orderedArrBelowLastPage = orderedPagerSizeArr\n      .map(el => lastPage - el + 1)\n      .reverse();\n    if (currentPage > lastPage - middleOfPager) {\n      return { pagesArr: [1, '...', ...orderedArrBelowLastPage], currentPage };\n    }\n    return { pagesArr: [1, '...', ...pagerArr, '...', lastPage], currentPage };\n  }\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport loader from './GravityAnimating.svg';\n\nimport { getComicsList } from './api';\n\nimport Popup from './components/Popup/Popup';\nimport Comics from './components/Comics/Comics';\nimport InputWrapper from './components/InputWrapper/InputWrapper';\nimport Pagination from './components/Pagination/Pagination';\n\nconst Title = ({ title }) => <h2>{title}</h2>;\nconst Image = ({ path, extension, alt }) => (\n  <img src={`${path}.${extension}`} alt={alt} />\n);\nclass App extends Component {\n  state = {\n    list: [],\n    isLoading: true,\n    comicsListParams: {\n      orderBy: 'modified',\n      titleStartsWith: '',\n      limit: 20,\n      offset: 0,\n      total: 0,\n    },\n    showPopup: false,\n  };\n\n  async componentDidMount() {\n    this.getComicsData();\n  }\n\n  getComicsData = async (params = {}) => {\n    const { comicsListParams } = this.state;\n    const newComicsListParams = { ...comicsListParams, ...params };\n    this.setState({\n      isLoading: true,\n    });\n    const { list, offset, total } = await getComicsList(newComicsListParams);\n    this.setState({\n      comicsListParams: { ...newComicsListParams, offset, total },\n      list,\n      isLoading: false,\n    });\n  };\n\n  popupTargetComic = e => {\n    const title = e.target.alt;\n    if (title) {\n      const targetComics = this.state.list.find(\n        comics => comics.title === title,\n      );\n      this.setState({\n        targetComics,\n      });\n      this.togglePopup();\n    }\n  };\n  togglePopup = () => {\n    this.setState({\n      showPopup: !this.state.showPopup,\n    });\n  };\n  render() {\n    const {\n      list,\n      isLoading,\n      targetComics,\n      showPopup,\n      comicsListParams,\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <nav>\n          <InputWrapper\n            updateComics={this.getComicsData}\n            {...comicsListParams}\n          />\n        </nav>\n\n        {isLoading ? (\n          <img src={loader} className=\"App-logo\" alt=\"logo\" />\n        ) : (\n          <>\n            <main onClick={this.popupTargetComic}>\n              {list.map(comics => (\n                <Comics\n                  key={comics.id}\n                  image={<Image {...comics.thumbnail} alt={comics.title} />}\n                />\n              ))}\n              {!list.length ? <h2>Oops nothing found \":(\"</h2> : null}\n            </main>\n            <Pagination\n              handleClick={this.getComicsData}\n              {...comicsListParams}\n            />\n          </>\n        )}\n        {showPopup ? (\n          <Popup\n            text=\"Close Me\"\n            closePopup={this.togglePopup}\n            comics={targetComics}\n            title={<Title title={targetComics.title} />}\n            image={\n              <Image {...targetComics.thumbnail} alt={targetComics.title} />\n            }\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}