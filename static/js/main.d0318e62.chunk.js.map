{"version":3,"sources":["GravityAnimating.svg","api.js","components/Popup/Popup.js","components/Comics/Comics.js","components/InputWrapper/InputWrapper.js","components/Pagination/Pagination.js","utils.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","url","URL","defaultParams","ts","apikey","hash","format","formatType","noVariants","hasDigitalIssue","getComicsList","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","params","urlParams","response","results","_results$data","offset","total","list","wrap","_context","prev","next","URLSearchParams","objectSpread","toString","fetch","concat","sent","status","json","data","abrupt","Error","stop","_x","apply","this","arguments","Popup","closePopup","comics","react_default","createElement","className","src","thumbnail","path","extension","alt","title","description","urls","map","link","index","key","href","type","onClick","Comics","handleClick","InputWrapper","updateComics","limit","orderBy","onChange","ev","_ev$target","target","name","value","defineProperty","onSubmit","preventDefault","console","log","titleStartsWith","defaultValue","placeholder","Pagination","_getPager","getPageNumber","itemsPerPage","Math","ceil","currentPage","lastPage","middleOfPager","pagerSize","createOrderedArray","size","Array","from","el","orderedPagerSizeArray","pagesArray","toConsumableArray","pagerArray","orderedArrayBelowLastPage","reverse","getPager","page","App","state","isLoading","comicsListParams","totalPagesComics","showPopup","error","getComicsData","newComicsListParams","_ref2","_args","length","undefined","_this","setState","t0","popupTargetComics","targetComics","find","togglePopup","_this2","_this$state","components_InputWrapper_InputWrapper","assign","message","loader","Fragment","components_Comics_Comics","id","components_Pagination_Pagination","components_Popup_Popup","text","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iXCApCC,EAAM,IAAIC,IAAJ,+CACRC,EAAgB,CACdC,GAAI,IACJC,OAAQ,mCACRC,KAAM,mCACNC,OAAQ,QACRC,WAAY,QACZC,YAAY,EACZC,iBAAiB,GAGRC,EAAa,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAMC,GAAN,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAX,EAAAC,EAAAW,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACrBV,EAAY,IAAIW,gBAAJlB,OAAAmB,EAAA,EAAAnB,CAAA,GACbV,EACAgB,IACFc,WAJwBL,EAAAE,KAAA,EAKJI,MAAK,GAAAC,OAAIlC,EAAJ,KAAAkC,OAAWf,IALZ,UAMH,OADlBC,EALqBO,EAAAQ,MAMdC,OANc,CAAAT,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAOHT,EAASiB,OAPN,cAOnBhB,EAPmBM,EAAAQ,KAAAb,EAQCD,EAAQiB,KAA1Bf,EARiBD,EAQjBC,OAAQC,EARSF,EAQTE,MACVC,EAAOJ,EAAQiB,KAAKjB,QATDM,EAAAY,OAAA,SAUlB,CAAEd,OAAMF,SAAQC,UAVE,cAYrB,IAAIgB,MAAMpB,EAASgB,QAZE,yBAAAT,EAAAc,SAAAxB,MAAH,gBAAAyB,GAAA,OAAA/B,EAAAgC,MAAAC,KAAAC,YAAA,GCiBXC,SAzBD,SAAAnC,GAAA,IAAGoC,EAAHpC,EAAGoC,WAAYC,EAAfrC,EAAeqC,OAAf,OACZC,EAAAlC,EAAAmC,cAAA,OAAKC,UAAU,SACbF,EAAAlC,EAAAmC,cAAA,OAAKC,UAAU,eACbF,EAAAlC,EAAAmC,cAAA,OAAKC,UAAU,oBACbF,EAAAlC,EAAAmC,cAAA,OACEE,IAAG,GAAAlB,OAAKc,EAAOK,UAAUC,KAAtB,KAAApB,OAA8Bc,EAAOK,UAAUE,WAClDC,IAAKR,EAAOS,SAGhBR,EAAAlC,EAAAmC,cAAA,OAAKC,UAAU,qBACbF,EAAAlC,EAAAmC,cAAA,UAAKF,EAAOS,OACZR,EAAAlC,EAAAmC,cAAA,SAAIF,EAAOU,aACXT,EAAAlC,EAAAmC,cAAA,OAAKC,UAAU,qBACZH,EAAOW,KAAKC,IAAI,SAACC,EAAMC,GAAP,OACfb,EAAAlC,EAAAmC,cAAA,KAAGa,IAAKD,EAAOE,KAAMH,EAAK7D,KACvB6D,EAAKI,UAKdhB,EAAAlC,EAAAmC,cAAA,UAAQgB,QAASnB,GAAjB,gBCTSoB,SAXA,SAAAxD,GAAA,IAAGqC,EAAHrC,EAAGqC,OAAQoB,EAAXzD,EAAWyD,YAAX,OACbnB,EAAAlC,EAAAmC,cAAA,OAAKC,UAAU,iBAAiBe,QAAS,kBAAME,EAAYpB,EAAOS,SAChER,EAAAlC,EAAAmC,cAAA,OAAKC,UAAU,SACbF,EAAAlC,EAAAmC,cAAA,OACEE,IAAG,GAAAlB,OAAKc,EAAOK,UAAUC,KAAtB,KAAApB,OAA8Bc,EAAOK,UAAUE,WAClDC,IAAKR,EAAOS,mBC0CLY,SA/CM,SAAA1D,GAAsC,IAAnC2D,EAAmC3D,EAAnC2D,aAAcC,EAAqB5D,EAArB4D,MAAOC,EAAc7D,EAAd6D,QAMrCC,EAAW,SAAAC,GAAM,IAAAC,EACGD,EAAGE,OAAnBC,EADaF,EACbE,KAAMC,EADOH,EACPG,MACdR,EAAa1D,OAAAmE,EAAA,EAAAnE,CAAA,GAAGiE,EAAOC,KAGzB,OACE7B,EAAAlC,EAAAmC,cAAA,QAAM8B,SAXS,SAAAN,GACfA,EAAGO,iBACHC,QAAQC,MACRb,EAAa,CAAEc,gBAAiBV,EAAGE,OAAOQ,gBAAgBN,UASxD7B,EAAAlC,EAAAmC,cAAA,UACEuB,SAAUA,EACVY,aAAcb,EACdrB,UAAU,8BACV0B,KAAK,WAEL5B,EAAAlC,EAAAmC,cAAA,UAAQ4B,MAAM,YAAd,sBACA7B,EAAAlC,EAAAmC,cAAA,UAAQ4B,MAAM,aAAd,uBACA7B,EAAAlC,EAAAmC,cAAA,UAAQ4B,MAAM,SAAd,mBACA7B,EAAAlC,EAAAmC,cAAA,UAAQ4B,MAAM,UAAd,qBAEF7B,EAAAlC,EAAAmC,cAAA,UACEuB,SAAUA,EACVY,aAAcd,EACdpB,UAAU,8BACV0B,KAAK,SAEL5B,EAAAlC,EAAAmC,cAAA,UAAQ4B,MAAM,MAAd,uBACA7B,EAAAlC,EAAAmC,cAAA,UAAQ4B,MAAM,MAAd,uBACA7B,EAAAlC,EAAAmC,cAAA,UAAQ4B,MAAM,MAAd,uBACA7B,EAAAlC,EAAAmC,cAAA,UAAQ4B,MAAM,MAAd,uBACA7B,EAAAlC,EAAAmC,cAAA,UAAQ4B,MAAM,MAAd,wBAEF7B,EAAAlC,EAAAmC,cAAA,SACEC,UAAU,6BACVmC,YAAY,0BACZT,KAAK,oBAEP5B,EAAAlC,EAAAmC,cAAA,UAAQ2B,KAAK,SAAS1B,UAAU,+BAAhC,oBCRSoC,SAhCI,SAAA5E,GAA2C,IAAxC4D,EAAwC5D,EAAxC4D,MAAOhD,EAAiCZ,EAAjCY,OAAQC,EAAyBb,EAAzBa,MAAO4C,EAAkBzD,EAAlByD,YAC1C,IAAK5C,EACH,OAAO,KAFmD,IAAAgE,ECJtC,SAACjB,EAAOhD,EAAQC,GACtC,IAAMiE,EAAgB,SAAAC,GAAY,OAAIC,KAAKC,KAAKF,EAAenB,IAC3DsB,EAAcJ,EAAclE,GAAU,EACpCuE,EAAWL,EAAcjE,GAEzBuE,EAAgBJ,KAAKC,KAAKI,KAC1BC,EAAqB,SAAAC,GAAI,OAC7BC,MAAMC,KAAK,IAAID,MAAMD,IAAOtC,IAAI,SAACyC,EAAIvC,GAAL,OAAeA,EAAQ,KACnDwC,EAAwBL,EAJd,GAKhB,GAAIH,EAAW,EACb,MAAO,CAAES,WAAY,GAAIV,eAE3B,GAAI,GAAKC,GAAYA,GARL,EASd,MAAO,CAAES,WAAYN,EAAmBH,GAAWD,eAErD,GAAIC,EAXY,EAWU,CACxB,GAAID,GAAeE,EACjB,MAAO,CACLQ,WAAU,GAAArE,OAAAtB,OAAA4F,EAAA,EAAA5F,CAAM0F,GAAN,CAA6B,MAAOR,IAC9CD,eAGJ,IAAIY,EAAaH,EAAsB1C,IACrC,SAAAyC,GAAE,OAAIR,EAAcE,EAAgBM,IAGtC,GAAIR,IAAgBE,EAAgB,EAClC,MAAO,CAAEQ,WAAU,CAAG,GAAHrE,OAAAtB,OAAA4F,EAAA,EAAA5F,CAAS6F,GAAT,CAAqB,MAAOX,IAAWD,eAG5D,GAAIA,IAAgBC,EAAWC,EAC7B,MAAO,CAAEQ,WAAU,CAAG,EAAG,OAANrE,OAAAtB,OAAA4F,EAAA,EAAA5F,CAAgB6F,GAAhB,CAA4BX,IAAWD,eAE5D,IAAIa,EAA4BJ,EAC7B1C,IAAI,SAAAyC,GAAE,OAAIP,EAAWO,EAAK,IAC1BM,UACH,OAAId,EAAcC,EAAWC,EACpB,CACLQ,WAAU,CAAG,EAAG,OAANrE,OAAAtB,OAAA4F,EAAA,EAAA5F,CAAgB8F,IAC1Bb,eAGG,CACLU,WAAU,CAAG,EAAG,OAANrE,OAAAtB,OAAA4F,EAAA,EAAA5F,CAAgB6F,GAAhB,CAA4B,MAAOX,IAC7CD,gBDpCgCe,CAASrC,EAAOhD,EAAQC,GAApD+E,EAJoDf,EAIpDe,WAAYV,EAJwCL,EAIxCK,YAQpB,OACE5C,EAAAlC,EAAAmC,cAAA,MAAIC,UAAU,mBACXoD,EAAW3C,IAAI,SAACiD,EAAM/C,GACrB,OAAO+C,IAAShB,EACd5C,EAAAlC,EAAAmC,cAAA,MACEC,UAAU,gCACVY,IAAKD,EACLgB,MAAO+B,GAENA,GAGH5D,EAAAlC,EAAAmC,cAAA,MAAIa,IAAKD,EAAOgB,MAAO+B,EAAM3C,QAAS,kBAlB9B,SAAA2C,GACD,QAATA,GACFzC,EAAY,CAAE7C,QAASsF,EAAO,GAAKtC,IAgBaL,CAAQ2C,KACjDA,QE+FEC,6MAhHbC,MAAQ,CACNtF,KAAM,GACNuF,WAAW,EACXC,iBAAkB,CAChBzC,QAAS,WACTD,MAAO,GACPhD,OAAQ,GAEV2F,iBAAkB,EAClBC,WAAW,EACXC,MAAO,QAOTC,mCAAgB,SAAApG,IAAA,IAAAC,EAAA+F,EAAAK,EAAAC,EAAA9F,EAAAF,EAAAC,EAAAgG,EAAA3E,UAAA,OAAA/B,EAAAC,EAAAW,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAOX,EAAPsG,EAAAC,OAAA,QAAAC,IAAAF,EAAA,GAAAA,EAAA,GAAgB,GACtBP,EAAqBU,EAAKZ,MAA1BE,iBACFK,EAFQ1G,OAAAmB,EAAA,EAAAnB,CAAA,GAEmBqG,EAAqB/F,GACvB,KAA3BA,EAAOkE,wBACFkC,EAAoBlC,gBAE7BuC,EAAKC,SAAS,CACZZ,WAAW,IAPCrF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAU0BnB,EAAc4G,GAVxC,OAAAC,EAAA5F,EAAAQ,KAUJV,EAVI8F,EAUJ9F,KAAMF,EAVFgG,EAUEhG,OAAQC,EAVV+F,EAUU/F,MACtBmG,EAAKC,SAAS,CACZX,iBAAiBrG,OAAAmB,EAAA,EAAAnB,CAAA,GAAM0G,EAAP,CAA4B/F,WAC5CE,OACAyF,iBAAkB1F,EAClBwF,WAAW,EACXI,MAAO,OAhBGzF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAkG,GAAAlG,EAAA,SAmBZgG,EAAKC,SAAS,CACZR,MAAKzF,EAAAkG,GACLb,WAAW,IArBD,yBAAArF,EAAAc,SAAAxB,EAAA,oBA0BhB6G,kBAAoB,SAAArE,GAClB,GAAIA,EAAO,CACT,IAAMsE,EAAeJ,EAAKZ,MAAMtF,KAAKuG,KACnC,SAAAhF,GAAM,OAAIA,EAAOS,QAAUA,IAE7BkE,EAAKC,SAAS,CACZG,iBAEFJ,EAAKM,kBAGTA,YAAc,WACZN,EAAKC,SAAS,CACZT,WAAYQ,EAAKZ,MAAMI,wMA1CzBvE,KAAKyE,mJA6CE,IAAAa,EAAAtF,KAAAuF,EASHvF,KAAKmE,MAPPK,EAFKe,EAELf,MACA3F,EAHK0G,EAGL1G,KACAuF,EAJKmB,EAILnB,UACAe,EALKI,EAKLJ,aACAZ,EANKgB,EAMLhB,UACAF,EAPKkB,EAOLlB,iBACAC,EARKiB,EAQLjB,iBAEF,OACEjE,EAAAlC,EAAAmC,cAAA,OAAKC,UAAU,OACbF,EAAAlC,EAAAmC,cAAA,cACED,EAAAlC,EAAAmC,cAACkF,EAADxH,OAAAyH,OAAA,CACE/D,aAAc1B,KAAKyE,eACfJ,KAGPG,EAAQnE,EAAAlC,EAAAmC,cAAA,oBAAYkE,EAAMkB,SAAgB,KAC1CtB,EACC/D,EAAAlC,EAAAmC,cAAA,OAAKE,IAAKmF,IAAQpF,UAAU,WAAWK,IAAI,SACzC,KACF4D,GAAUJ,EAkBR,KAjBF/D,EAAAlC,EAAAmC,cAAAD,EAAAlC,EAAAyH,SAAA,KACEvF,EAAAlC,EAAAmC,cAAA,YACGzB,EAAKmC,IAAI,SAAAZ,GAAM,OACdC,EAAAlC,EAAAmC,cAACuF,EAAD,CACE1E,IAAKf,EAAO0F,GACZ1F,OAAQA,EACRoB,YAAa8D,EAAKJ,sBAGpBrG,EAAKgG,OAA0C,KAAjCxE,EAAAlC,EAAAmC,cAAA,oCAElBD,EAAAlC,EAAAmC,cAACyF,EAAD/H,OAAAyH,OAAA,CACEjE,YAAaxB,KAAKyE,cAClB7F,MAAO0F,GACHD,KAITE,EACClE,EAAAlC,EAAAmC,cAAC0F,EAAD,CACEC,KAAK,WACL9F,WAAYH,KAAKqF,YACjBjF,OAAQ+E,IAER,aA3GMe,aCCEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpG,EAAAlC,EAAAmC,cAACoG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d0318e62.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GravityAnimating.34068f26.svg\";","let url = new URL(`https://gateway.marvel.com/v1/public/comics`),\n  defaultParams = {\n    ts: '1',\n    apikey: '1136faa63131cec339ae63058b627b70',\n    hash: '7abf5f031a9f3f0031ac8c51fcfe8da0',\n    format: 'comic',\n    formatType: 'comic',\n    noVariants: true,\n    hasDigitalIssue: false,\n  };\n\nexport const getComicsList = async params => {\n  const urlParams = new URLSearchParams({\n    ...defaultParams,\n    ...params,\n  }).toString();\n  const response = await fetch(`${url}?${urlParams}`);\n  if (response.status === 200) {\n    const results = await response.json();\n    const { offset, total } = results.data;\n    const list = results.data.results;\n    return { list, offset, total };\n  }\n  throw new Error(response.status);\n};\n","import React from 'react';\nimport './style.scss';\n\nconst Popup = ({ closePopup, comics }) => (\n  <div className=\"popup\">\n    <div className=\"popup_inner\">\n      <div className=\"popup_inner-left\">\n        <img\n          src={`${comics.thumbnail.path}.${comics.thumbnail.extension}`}\n          alt={comics.title}\n        />\n      </div>\n      <div className=\"popup_inner-right\">\n        <h2>{comics.title}</h2>\n        <p>{comics.description}</p>\n        <div className=\"popup_inner-links\">\n          {comics.urls.map((link, index) => (\n            <a key={index} href={link.url}>\n              {link.type}\n            </a>\n          ))}\n        </div>\n      </div>\n      <button onClick={closePopup}>close me</button>\n    </div>\n  </div>\n);\n\nexport default Popup;\n","import React from 'react';\nimport './style.scss';\n\nconst Comics = ({ comics, handleClick }) => (\n  <div className=\"comics-wrapper\" onClick={() => handleClick(comics.title)}>\n    <div className=\"image\">\n      <img\n        src={`${comics.thumbnail.path}.${comics.thumbnail.extension}`}\n        alt={comics.title}\n      />\n    </div>\n  </div>\n);\n\nexport default Comics;\n","import React from 'react';\nimport './style.scss';\n\nconst InputWrapper = ({ updateComics, limit, orderBy }) => {\n  const onSubmit = ev => {\n    ev.preventDefault();\n    console.log();\n    updateComics({ titleStartsWith: ev.target.titleStartsWith.value });\n  };\n  const onChange = ev => {\n    const { name, value } = ev.target;\n    updateComics({ [name]: value });\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <select\n        onChange={onChange}\n        defaultValue={orderBy}\n        className=\"search__item search__select\"\n        name=\"orderBy\"\n      >\n        <option value=\"modified\">Order by: modified</option>\n        <option value=\"-modified\">Order by: -modified</option>\n        <option value=\"title\">Order by: title</option>\n        <option value=\"-title\">Order by: -title</option>\n      </select>\n      <select\n        onChange={onChange}\n        defaultValue={limit}\n        className=\"search__item search__select\"\n        name=\"limit\"\n      >\n        <option value=\"10\">Comics per page: 10</option>\n        <option value=\"20\">Comics per page: 20</option>\n        <option value=\"30\">Comics per page: 30</option>\n        <option value=\"40\">Comics per page: 40</option>\n        <option value=\"50\">Comics per page: 50</option>\n      </select>\n      <input\n        className=\"search__item search__input\"\n        placeholder=\"title starts with .....\"\n        name=\"titleStartsWith\"\n      />\n      <button name=\"button\" className=\"search__item search__button\">\n        search\n      </button>\n    </form>\n  );\n};\nexport default InputWrapper;\n","import React from 'react';\nimport { getPager } from '../../utils';\nimport './style.scss';\n\nconst Pagination = ({ limit, offset, total, handleClick }) => {\n  if (!total) {\n    return null;\n  }\n  const { pagesArray, currentPage } = getPager(limit, offset, total);\n\n  const onClick = page => {\n    if (page !== '...') {\n      handleClick({ offset: (page - 1) * limit });\n    }\n  };\n\n  return (\n    <ul className=\"pagination_list\">\n      {pagesArray.map((page, index) => {\n        return page === currentPage ? (\n          <li\n            className=\"pagination_selected-list-item\"\n            key={index}\n            value={page}\n          >\n            {page}\n          </li>\n        ) : (\n          <li key={index} value={page} onClick={() => onClick(page)}>\n            {page}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default Pagination;\n","export const getPager = (limit, offset, total) => {\n  const getPageNumber = itemsPerPage => Math.ceil(itemsPerPage / limit);\n  let currentPage = getPageNumber(offset) + 1;\n  const lastPage = getPageNumber(total);\n  let pagerSize = 5;\n  const middleOfPager = Math.ceil(pagerSize / 2);\n  const createOrderedArray = size =>\n    Array.from(new Array(size)).map((el, index) => index + 1);\n  const orderedPagerSizeArray = createOrderedArray(pagerSize);\n  if (lastPage < 1) {\n    return { pagesArray: [], currentPage };\n  }\n  if (1 <= lastPage && lastPage <= pagerSize) {\n    return { pagesArray: createOrderedArray(lastPage), currentPage };\n  }\n  if (lastPage > pagerSize) {\n    if (currentPage <= middleOfPager) {\n      return {\n        pagesArray: [...orderedPagerSizeArray, '...', lastPage],\n        currentPage,\n      };\n    }\n    let pagerArray = orderedPagerSizeArray.map(\n      el => currentPage - middleOfPager + el,\n    );\n\n    if (currentPage === middleOfPager + 1) {\n      return { pagesArray: [1, ...pagerArray, '...', lastPage], currentPage };\n    }\n\n    if (currentPage === lastPage - middleOfPager) {\n      return { pagesArray: [1, '...', ...pagerArray, lastPage], currentPage };\n    }\n    let orderedArrayBelowLastPage = orderedPagerSizeArray\n      .map(el => lastPage - el + 1)\n      .reverse();\n    if (currentPage > lastPage - middleOfPager) {\n      return {\n        pagesArray: [1, '...', ...orderedArrayBelowLastPage],\n        currentPage,\n      };\n    }\n    return {\n      pagesArray: [1, '...', ...pagerArray, '...', lastPage],\n      currentPage,\n    };\n  }\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport loader from './GravityAnimating.svg';\n\nimport { getComicsList } from './api';\n\nimport Popup from './components/Popup/Popup';\nimport Comics from './components/Comics/Comics';\nimport InputWrapper from './components/InputWrapper/InputWrapper';\nimport Pagination from './components/Pagination/Pagination';\n\nclass App extends Component {\n  state = {\n    list: [],\n    isLoading: true,\n    comicsListParams: {\n      orderBy: 'modified',\n      limit: 20,\n      offset: 0,\n    },\n    totalPagesComics: 0,\n    showPopup: false,\n    error: null,\n  };\n\n  async componentDidMount() {\n    this.getComicsData();\n  }\n\n  getComicsData = async (params = {}) => {\n    const { comicsListParams } = this.state;\n    const newComicsListParams = { ...comicsListParams, ...params };\n    if (params.titleStartsWith === '') {\n      delete newComicsListParams.titleStartsWith;\n    }\n    this.setState({\n      isLoading: true,\n    });\n    try {\n      const { list, offset, total } = await getComicsList(newComicsListParams);\n      this.setState({\n        comicsListParams: { ...newComicsListParams, offset },\n        list,\n        totalPagesComics: total,\n        isLoading: false,\n        error: null,\n      });\n    } catch (error) {\n      this.setState({\n        error,\n        isLoading: false,\n      });\n    }\n  };\n\n  popupTargetComics = title => {\n    if (title) {\n      const targetComics = this.state.list.find(\n        comics => comics.title === title,\n      );\n      this.setState({\n        targetComics,\n      });\n      this.togglePopup();\n    }\n  };\n  togglePopup = () => {\n    this.setState({\n      showPopup: !this.state.showPopup,\n    });\n  };\n  render() {\n    const {\n      error,\n      list,\n      isLoading,\n      targetComics,\n      showPopup,\n      comicsListParams,\n      totalPagesComics,\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <header>\n          <InputWrapper\n            updateComics={this.getComicsData}\n            {...comicsListParams}\n          />\n        </header>\n        {error ? <h2>error: {error.message}</h2> : null}\n        {isLoading ? (\n          <img src={loader} className=\"App-logo\" alt=\"logo\" />\n        ) : null}\n        {!error && !isLoading ? (\n          <>\n            <main>\n              {list.map(comics => (\n                <Comics\n                  key={comics.id}\n                  comics={comics}\n                  handleClick={this.popupTargetComics}\n                />\n              ))}\n              {!list.length ? <h2>Oops nothing found :(</h2> : null}\n            </main>\n            <Pagination\n              handleClick={this.getComicsData}\n              total={totalPagesComics}\n              {...comicsListParams}\n            />\n          </>\n        ) : null}\n        {showPopup ? (\n          <Popup\n            text=\"Close Me\"\n            closePopup={this.togglePopup}\n            comics={targetComics}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}