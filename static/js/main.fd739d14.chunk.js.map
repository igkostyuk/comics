{"version":3,"sources":["GravityAnimating.svg","api.js","Popup.js","Comics.js","InputWrapper.js","Pagination.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","url","URL","params","ts","apikey","hash","format","formatType","noVariants","hasDigitalIssue","limit","Object","keys","forEach","key","searchParams","append","ignores","checkingThumbnail","item","thumbnail","path","thumb","indexOf","setComicsSearchParams","paramsKey","set","delete","getComicsList","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","response","results","_ref2","offset","total","list","wrap","_context","prev","next","fetch","sent","json","data","filter","abrupt","stop","apply","this","arguments","Popup","closePopup","comics","title","image","react_default","createElement","className","description","urls","map","link","index","href","type","onClick","Comics","InputWrapper","handleSubmit","onSubmit","ev","preventDefault","elements","target","value","toConsumableArray","reduce","acc","el","name","objectSpread","defineProperty","placeholder","Pagination","handleClick","getPageNumber","itemsPerPage","Math","ceil","currentPage","lastPage","pager","pagerSize","middleOfPager","createOrderedArr","size","Array","from","orderedPagerSizeArr","concat","pagerArr","orderedArrBelowLastPage","reverse","getPager","e","pageNumber","innerHTML","matches","console","log","page","Title","Image","extension","alt","src","App","state","isLoading","orderBy","titleStartsWith","showPopup","updateComicsDate","_ref4","_this","updateSearchParams","setState","assign","setComicsLParams","_callee2","_context2","targetComics","find","togglePopup","length","undefined","_this$state","src_InputWrapper","loader","Fragment","src_Comics","id","App_Title","App_Image","src_Pagination","src_Popup","text","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fd739d14.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GravityAnimating.34068f26.svg\";","let url = new URL(`https://gateway.marvel.com/v1/public/comics`),\n  params = {\n    ts: '1',\n    apikey: '1136faa63131cec339ae63058b627b70',\n    hash: '7abf5f031a9f3f0031ac8c51fcfe8da0',\n    format: 'comic',\n    formatType: 'comic',\n    noVariants: true,\n    hasDigitalIssue: false,\n    limit: 20,\n  };\nObject.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n\nconst ignores = ['http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708'];\nconst checkingThumbnail = item => {\n  if (!item.thumbnail || !item.thumbnail.path) {\n    return false;\n  }\n  var thumb = item.thumbnail;\n  return (\n    thumb.path.indexOf('image_not_available') === -1 &&\n    ignores.indexOf(thumb.path) === -1\n  );\n};\nexport const setComicsSearchParams = searchParams => {\n  const availableSearchParamsArr = [\n    'orderBy',\n    'titleStartsWith',\n    'limit',\n    'offset',\n  ];\n\n  availableSearchParamsArr.forEach(paramsKey =>\n    !searchParams[paramsKey]\n      ? url.searchParams.delete(paramsKey)\n      : url.searchParams.set(paramsKey, searchParams[paramsKey]),\n  );\n};\nexport const getComicsList = async () => {\n  const response = await fetch(url);\n  const results = await response.json();\n  const { offset, total } = await results.data;\n  const list = await results.data.results.filter(checkingThumbnail);\n  return { list, offset, total };\n};\n","import React from 'react';\n\nconst Popup = ({ closePopup, comics, title, image }) => (\n  <div className=\"popup\">\n    <div className=\"popup_inner\">\n      <div className=\"popup_inner-left\">{image}</div>\n      <div className=\"popup_inner-right\">\n        {title}\n        <p>{comics.description}</p>\n        {comics.urls.map((link, index) => (\n          <a key={index} href={link.url}>\n            {link.type}\n          </a>\n        ))}\n      </div>\n      <button onClick={closePopup}>close me</button>\n    </div>\n  </div>\n);\n\nexport default Popup;\n","import React from 'react';\n\nconst Comics = ({ title, image }) => (\n  <div className=\"comics-wrapper\">\n    {/* <div className=\"title\">{title}</div> */}\n    <div className=\"image\">{image}</div>\n  </div>\n);\n\nexport default Comics;\n","import React from 'react';\n\nconst InputWrapper = ({ handleSubmit }) => {\n  const onSubmit = ev => {\n    ev.preventDefault();\n    const { elements } = ev.target;\n    const value = [...elements].reduce((acc, el) => {\n      if (el.name) {\n        return { ...acc, [el.name]: el.value };\n      }\n      return acc;\n    }, {});\n    handleSubmit(value);\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <select className=\"search__item search__select\" name=\"orderBy\">\n        <option value=\"modified\">Order by: modified</option>\n        <option value=\"-modified\">Order by: -modified</option>\n        <option value=\"title\">Order by: title</option>\n        <option value=\"-title\">Order by: -title</option>\n      </select>\n      <select className=\"search__item search__select\" name=\"limit\">\n        <option value=\"10\">Comics per page: 10</option>\n        <option value=\"20\">Comics per page: 20</option>\n        <option value=\"30\">Comics per page: 30</option>\n        <option value=\"50\">Comics per page: 50</option>\n      </select>\n      <input\n        className=\"search__item search__input\"\n        placeholder=\"title starts with .....\"\n        name=\"titleStartsWith\"\n      />\n      <button className=\"search__item search__button\">search</button>\n    </form>\n  );\n};\nexport default InputWrapper;\n","import React from 'react';\n\nconst Pagination = ({ limit, offset, total, handleClick }) => {\n  if (total && limit) {\n    const getPageNumber = itemsPerPage => Math.ceil(itemsPerPage / limit);\n    let currentPage = getPageNumber(offset) + 1;\n    currentPage = !currentPage ? 1 : currentPage;\n    const lastPage = getPageNumber(total) - 1;\n    const getPager = () => {\n      let pagerSize = 5;\n      pagerSize = pagerSize % 2 ? pagerSize++ : pagerSize;\n      const middleOfPager = Math.ceil(pagerSize / 2);\n      const createOrderedArr = size =>\n        Array.from(new Array(size)).map((el, index) => index + 1);\n      const orderedPagerSizeArr = createOrderedArr(pagerSize);\n      if (lastPage < 1) {\n        return [];\n      }\n      if (1 <= lastPage && lastPage <= pagerSize) {\n        return createOrderedArr(lastPage);\n      }\n      if (lastPage > pagerSize) {\n        if (currentPage <= middleOfPager) {\n          return [...orderedPagerSizeArr, '...', lastPage];\n        }\n        let pagerArr = orderedPagerSizeArr.map(\n          el => currentPage - middleOfPager + el,\n        );\n\n        if (currentPage === middleOfPager + 1) {\n          return [1, ...pagerArr, '...', lastPage];\n        }\n\n        if (currentPage === lastPage - middleOfPager) {\n          return [1, '...', ...pagerArr, lastPage];\n        }\n        let orderedArrBelowLastPage = orderedPagerSizeArr\n          .map(el => lastPage - el + 1)\n          .reverse();\n        if (currentPage > lastPage - middleOfPager) {\n          return [1, '...', ...orderedArrBelowLastPage];\n        }\n        return [1, '...', ...pagerArr, '...', lastPage];\n      }\n    };\n    const pager = getPager();\n\n    const onClick = e => {\n      const pageNumber = e.target.innerHTML;\n      if (\n        e.target.matches('li') &&\n        pageNumber !== '...' &&\n        pageNumber !== currentPage\n      )\n        console.log(pageNumber);\n      handleClick({ offset: (pageNumber - 1) * limit });\n    };\n\n    return (\n      <ul className=\"pagination_list\" onClick={onClick}>\n        {pager.map((page, index) => {\n          return page === currentPage ? (\n            <li className=\"pagination_selected-list-item\" key={index}>\n              {page}\n            </li>\n          ) : (\n            <li key={index}>{page}</li>\n          );\n        })}\n      </ul>\n    );\n  } else {\n    return null;\n  }\n};\nexport default Pagination;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport loader from './GravityAnimating.svg';\n\nimport { getComicsList, setComicsSearchParams } from './api';\n\nimport Popup from './Popup';\nimport Comics from './Comics';\nimport InputWrapper from './InputWrapper';\nimport Pagination from './Pagination';\n\nconst Title = ({ title }) => <h2>{title}</h2>;\nconst Image = ({ path, extension, alt }) => (\n  <img src={`${path}.${extension}`} alt={alt} />\n);\nclass App extends Component {\n  state = {\n    list: [],\n    isLoading: true,\n    searchParams: {\n      orderBy: 'modified',\n      titleStartsWith: '',\n      limit: 20,\n      offset: 0,\n      total: 0,\n    },\n    showPopup: false,\n  };\n\n  async componentDidMount() {\n    this.updateComicsDate();\n  }\n  updateComicsDate = async () => {\n    const { list, offset, total } = await getComicsList();\n    this.updateSearchParams({ offset, total });\n    this.setState({ list, isLoading: false });\n  };\n  updateSearchParams = params => {\n    let { searchParams } = this.state;\n    searchParams = Object.assign(searchParams, params);\n    this.setState(searchParams);\n  };\n  setComicsLParams = async params => {\n    this.setState({ isLoading: true });\n    this.updateSearchParams(params);\n    setComicsSearchParams(this.state.searchParams);\n    this.updateComicsDate();\n  };\n  onClick = e => {\n    const title = e.target.alt;\n    if (e.target.alt) {\n      const targetComics = this.state.list.find(\n        comics => comics.title === title,\n      );\n      this.togglePopup(targetComics);\n    }\n  };\n  togglePopup = (targetComics = {}) => {\n    this.setState({\n      showPopup: !this.state.showPopup,\n      targetComics,\n    });\n  };\n  render() {\n    const {\n      list,\n      isLoading,\n      targetComics,\n      showPopup,\n      searchParams,\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <nav>\n          <InputWrapper handleSubmit={this.setComicsLParams} />\n        </nav>\n\n        {isLoading ? (\n          <img src={loader} className=\"App-logo\" alt=\"logo\" />\n        ) : (\n          <>\n            <main onClick={this.onClick}>\n              {list.map(comics => (\n                <Comics\n                  key={comics.id}\n                  title={<Title title={comics.title} />}\n                  image={<Image {...comics.thumbnail} alt={comics.title} />}\n                />\n              ))}\n              {!list.length ? <h2>Oops nothing found \":(\"</h2> : null}\n            </main>\n            <Pagination handleClick={this.setComicsLParams} {...searchParams} />\n          </>\n        )}\n        {showPopup ? (\n          <Popup\n            text=\"Close Me\"\n            closePopup={this.togglePopup}\n            comics={targetComics}\n            title={<Title title={targetComics.title} />}\n            image={\n              <Image {...targetComics.thumbnail} alt={targetComics.title} />\n            }\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}