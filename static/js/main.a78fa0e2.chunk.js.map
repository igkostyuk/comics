{"version":3,"sources":["GravityAnimating.svg","api.js","components/Popup/Popup.js","components/Comics/Comics.js","components/InputWrapper/InputWrapper.js","components/Pagination/Pagination.js","utils.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","url","URL","defaultParams","ts","apikey","hash","format","formatType","noVariants","hasDigitalIssue","getComicsList","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","params","urlParams","response","results","_ref2","offset","total","list","wrap","_context","prev","next","URLSearchParams","objectSpread","toString","console","log","concat","fetch","sent","json","data","abrupt","stop","_x","apply","this","arguments","Popup","closePopup","comics","react_default","createElement","className","src","thumbnail","path","extension","alt","title","description","urls","map","link","index","key","href","type","onClick","Comics","Options","optionsValuesArr","val","value","InputWrapper","updateComics","limit","orderBy","titleStartsWith","React","createRef","onChange","ev","_ev$target","target","name","defineProperty","onSubmit","preventDefault","current","defaultValue","InputWrapper_Options","placeholder","ref","Pagination","handleClick","_getPager","getPageNumber","itemsPerPage","Math","ceil","currentPage","lastPage","pagerSize","middleOfPager","createOrderedArr","size","Array","from","el","orderedPagerSizeArr","pagesArr","toConsumableArray","pagerArr","orderedArrBelowLastPage","reverse","getPager","e","pageNumber","innerHTML","matches","page","App","state","isLoading","comicsListParams","totalPagesComics","showPopup","getComicsData","newComicsListParams","_args","length","undefined","_this","setState","popupTargetComic","targetComics","find","togglePopup","_this$state","components_InputWrapper_InputWrapper","assign","loader","Fragment","components_Comics_Comics","id","components_Pagination_Pagination","components_Popup_Popup","text","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iXCApCC,EAAM,IAAIC,IAAJ,+CACRC,EAAgB,CACdC,GAAI,IACJC,OAAQ,mCACRC,KAAM,mCACNC,OAAQ,QACRC,WAAY,QACZC,YAAY,EACZC,iBAAiB,GAGRC,EAAa,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAMC,GAAN,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAX,EAAAC,EAAAW,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACrBV,EAAY,IAAIW,gBAAJlB,OAAAmB,EAAA,EAAAnB,CAAA,GACbV,EACAgB,IACFc,WAEHC,QAAQC,IAAR,GAAAC,OAAenC,EAAf,KAAAmC,OAAsBhB,IANKQ,EAAAE,KAAA,EAQJO,MAAK,GAAAD,OAAInC,EAAJ,KAAAmC,OAAWhB,IARZ,cAQrBC,EARqBO,EAAAU,KAAAV,EAAAE,KAAA,EASLT,EAASkB,OATJ,cASrBjB,EATqBM,EAAAU,KAAAV,EAAAE,KAAA,GAUKR,EAAQkB,KAVb,eAAAjB,EAAAK,EAAAU,KAUnBd,EAVmBD,EAUnBC,OAAQC,EAVWF,EAUXE,MAVWG,EAAAE,KAAA,GAWRR,EAAQkB,KAAKlB,QAXL,eAWrBI,EAXqBE,EAAAU,KAAAV,EAAAa,OAAA,SAYpB,CAAEf,OAAMF,SAAQC,UAZI,yBAAAG,EAAAc,SAAAxB,MAAH,gBAAAyB,GAAA,OAAA/B,EAAAgC,MAAAC,KAAAC,YAAA,GCiBXC,SAzBD,SAAAnC,GAAA,IAAGoC,EAAHpC,EAAGoC,WAAYC,EAAfrC,EAAeqC,OAAf,OACZC,EAAAlC,EAAAmC,cAAA,OAAKC,UAAU,SACbF,EAAAlC,EAAAmC,cAAA,OAAKC,UAAU,eACbF,EAAAlC,EAAAmC,cAAA,OAAKC,UAAU,oBACbF,EAAAlC,EAAAmC,cAAA,OACEE,IAAG,GAAAjB,OAAKa,EAAOK,UAAUC,KAAtB,KAAAnB,OAA8Ba,EAAOK,UAAUE,WAClDC,IAAKR,EAAOS,SAGhBR,EAAAlC,EAAAmC,cAAA,OAAKC,UAAU,qBACbF,EAAAlC,EAAAmC,cAAA,UAAKF,EAAOS,OACZR,EAAAlC,EAAAmC,cAAA,SAAIF,EAAOU,aACXT,EAAAlC,EAAAmC,cAAA,OAAKC,UAAU,qBACZH,EAAOW,KAAKC,IAAI,SAACC,EAAMC,GAAP,OACfb,EAAAlC,EAAAmC,cAAA,KAAGa,IAAKD,EAAOE,KAAMH,EAAK7D,KACvB6D,EAAKI,UAKdhB,EAAAlC,EAAAmC,cAAA,UAAQgB,QAASnB,GAAjB,gBCTSoB,SAXA,SAAAxD,GAAA,IAAGqC,EAAHrC,EAAGqC,OAAH,OACbC,EAAAlC,EAAAmC,cAAA,OAAKC,UAAU,kBACbF,EAAAlC,EAAAmC,cAAA,OAAKC,UAAU,SACbF,EAAAlC,EAAAmC,cAAA,OACEE,IAAG,GAAAjB,OAAKa,EAAOK,UAAUC,KAAtB,KAAAnB,OAA8Ba,EAAOK,UAAUE,WAClDC,IAAKR,EAAOS,mBCLdW,SAAU,SAAAzD,GAAA,IAAG0D,EAAH1D,EAAG0D,iBAAkBX,EAArB/C,EAAqB+C,YAArB,OACdW,EAAiBT,IAAI,SAAAU,GAAG,OACtBrB,EAAAlC,EAAAmC,cAAA,UAAQa,IAAKO,EAAKC,MAAOD,GACtBZ,EADH,KACkBY,OAiDPE,EA9CM,SAAAlD,GAAsC,IAAnCmD,EAAmCnD,EAAnCmD,aAAcC,EAAqBpD,EAArBoD,MAAOC,EAAcrD,EAAdqD,QACvCC,EAAkBC,IAAMC,YAKtBC,EAAW,SAAAC,GAAM,IAAAC,EACGD,EAAGE,OAAnBC,EADaF,EACbE,KAAMZ,EADOU,EACPV,MACdE,EAAa7D,OAAAwE,EAAA,EAAAxE,CAAA,GAAGuE,EAAOZ,KAGzB,OACEtB,EAAAlC,EAAAmC,cAAA,QAAMmC,SAVS,SAAAL,GACfA,EAAGM,iBACHb,EAAa,CAAEG,gBAAiBA,EAAgBW,QAAQhB,UAStDtB,EAAAlC,EAAAmC,cAAA,UACE6B,SAAUA,EACVS,aAAcb,EACdxB,UAAU,8BACVgC,KAAK,WAELlC,EAAAlC,EAAAmC,cAACuC,EAAD,CACEpB,iBAAkB,CAAC,WAAY,YAAa,QAAS,UACrDX,YAAY,cAGhBT,EAAAlC,EAAAmC,cAAA,UACE6B,SAAUA,EACVS,aAAcd,EACdvB,UAAU,8BACVgC,KAAK,SAELlC,EAAAlC,EAAAmC,cAACuC,EAAD,CACEpB,iBAAkB,CAAC,GAAI,GAAI,GAAI,GAAI,IACnCX,YAAY,qBAGhBT,EAAAlC,EAAAmC,cAAA,SACEC,UAAU,6BACVuC,YAAY,0BACZC,IAAKf,IAEP3B,EAAAlC,EAAAmC,cAAA,UAAQiC,KAAK,SAAShC,UAAU,+BAAhC,mBCZSyC,SAjCI,SAAAjF,GAA2C,IAAxC+D,EAAwC/D,EAAxC+D,MAAOnD,EAAiCZ,EAAjCY,OAAQC,EAAyBb,EAAzBa,MAAOqE,EAAkBlF,EAAlBkF,YAC1C,GAAIrE,GAASkD,GAASlD,EAAQkD,EAAO,KAAAoB,ECLf,SAACpB,EAAOnD,EAAQC,GACtC,IAAMuE,EAAgB,SAAAC,GAAY,OAAIC,KAAKC,KAAKF,EAAetB,IAC3DyB,EAAcJ,EAAcxE,GAAU,EACpC6E,EAAWL,EAAcvE,GAC3B6E,EAAY,EAChBA,EAAYA,EAAY,EAAIA,IAAcA,EAC1C,IAAMC,EAAgBL,KAAKC,KAAKG,EAAY,GACtCE,EAAmB,SAAAC,GAAI,OAC3BC,MAAMC,KAAK,IAAID,MAAMD,IAAO5C,IAAI,SAAC+C,EAAI7C,GAAL,OAAeA,EAAQ,KACnD8C,EAAsBL,EAAiBF,GAC7C,GAAID,EAAW,EACb,MAAO,CAAES,SAAU,GAAIV,eAEzB,GAAI,GAAKC,GAAYA,GAAYC,EAC/B,MAAO,CAAEQ,SAAUN,EAAiBH,GAAWD,eAEjD,GAAIC,EAAWC,EAAW,CACxB,GAAIF,GAAeG,EACjB,MAAO,CACLO,SAAQ,GAAA1E,OAAAvB,OAAAkG,EAAA,EAAAlG,CAAMgG,GAAN,CAA2B,MAAOR,IAC1CD,eAGJ,IAAIY,EAAWH,EAAoBhD,IACjC,SAAA+C,GAAE,OAAIR,EAAcG,EAAgBK,IAGtC,GAAIR,IAAgBG,EAAgB,EAClC,MAAO,CAAEO,SAAQ,CAAG,GAAH1E,OAAAvB,OAAAkG,EAAA,EAAAlG,CAASmG,GAAT,CAAmB,MAAOX,IAAWD,eAGxD,GAAIA,IAAgBC,EAAWE,EAC7B,MAAO,CAAEO,SAAQ,CAAG,EAAG,OAAN1E,OAAAvB,OAAAkG,EAAA,EAAAlG,CAAgBmG,GAAhB,CAA0BX,IAAWD,eAExD,IAAIa,EAA0BJ,EAC3BhD,IAAI,SAAA+C,GAAE,OAAIP,EAAWO,EAAK,IAC1BM,UACH,OAAId,EAAcC,EAAWE,EACpB,CAAEO,SAAQ,CAAG,EAAG,OAAN1E,OAAAvB,OAAAkG,EAAA,EAAAlG,CAAgBoG,IAA0Bb,eAEtD,CAAEU,SAAQ,CAAG,EAAG,OAAN1E,OAAAvB,OAAAkG,EAAA,EAAAlG,CAAgBmG,GAAhB,CAA0B,MAAOX,IAAWD,gBDlC3Be,CAASxC,EAAOnD,EAAQC,GAAlDqF,EAD2Bf,EAC3Be,SAAUV,EADiBL,EACjBK,YAclB,OACElD,EAAAlC,EAAAmC,cAAA,MAAIC,UAAU,kBAAkBe,QAblB,SAAAiD,GACd,IAAMC,EAAaD,EAAEjC,OAAOmC,UAE1BF,EAAEjC,OAAOoC,QAAQ,OACF,QAAfF,GAEAA,GAAcjB,GAEdN,EAAY,CAAEtE,QAAS6F,EAAa,GAAK1C,MAMxCmC,EAASjD,IAAI,SAAC2D,EAAMzD,GACnB,OAAOyD,IAASpB,EACdlD,EAAAlC,EAAAmC,cAAA,MAAIC,UAAU,gCAAgCY,IAAKD,GAChDyD,GAGHtE,EAAAlC,EAAAmC,cAAA,MAAIa,IAAKD,GAAQyD,MAMzB,OAAO,OE0EIC,6MAhGbC,MAAQ,CACNhG,KAAM,GACNiG,WAAW,EACXC,iBAAkB,CAChBhD,QAAS,WACTD,MAAO,GACPnD,OAAQ,GAEVqG,iBAAkB,EAClBC,WAAW,KAObC,mCAAgB,SAAA7G,IAAA,IAAAC,EAAAyG,EAAAI,EAAAzG,EAAAG,EAAAF,EAAAC,EAAAwG,EAAAnF,UAAA,OAAA/B,EAAAC,EAAAW,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAOX,EAAP8G,EAAAC,OAAA,QAAAC,IAAAF,EAAA,GAAAA,EAAA,GAAgB,GACtBL,EAAqBQ,EAAKV,MAA1BE,kBACPzG,EAAO0D,wBAA0B1D,EAAO0D,gBACnCmD,EAHQnH,OAAAmB,EAAA,EAAAnB,CAAA,GAGmB+G,EAAqBzG,GACtDiH,EAAKC,SAAS,CACZV,WAAW,IALC/F,EAAAE,KAAA,EAOwBnB,EAAcqH,GAPtC,OAAAzG,EAAAK,EAAAU,KAONZ,EAPMH,EAONG,KAAMF,EAPAD,EAOAC,OAAQC,EAPRF,EAOQE,MACtB2G,EAAKC,SAAS,CACZT,iBAAiB/G,OAAAmB,EAAA,EAAAnB,CAAA,GAAMmH,EAAP,CAA4BxG,WAC5CE,OACAmG,iBAAkBpG,EAClBkG,WAAW,IAZC,yBAAA/F,EAAAc,SAAAxB,QAgBhBoH,iBAAmB,SAAAlB,GACjB,IAAM1D,EAAQ0D,EAAEjC,OAAO1B,IACvB,GAAIC,EAAO,CACT,IAAM6E,EAAeH,EAAKV,MAAMhG,KAAK8G,KACnC,SAAAvF,GAAM,OAAIA,EAAOS,QAAUA,IAE7B0E,EAAKC,SAAS,CACZE,iBAEFH,EAAKK,kBAGTA,YAAc,WACZL,EAAKC,SAAS,CACZP,WAAYM,EAAKV,MAAMI,wMAjCzBjF,KAAKkF,mJAoCE,IAAAW,EAQH7F,KAAK6E,MANPhG,EAFKgH,EAELhH,KACAiG,EAHKe,EAGLf,UACAY,EAJKG,EAILH,aACAT,EALKY,EAKLZ,UACAF,EANKc,EAMLd,iBACAC,EAPKa,EAOLb,iBAEF,OACE3E,EAAAlC,EAAAmC,cAAA,OAAKC,UAAU,OACbF,EAAAlC,EAAAmC,cAAA,WACED,EAAAlC,EAAAmC,cAACwF,EAAD9H,OAAA+H,OAAA,CACElE,aAAc7B,KAAKkF,eACfH,KAIPD,EACCzE,EAAAlC,EAAAmC,cAAA,OAAKE,IAAKwF,IAAQzF,UAAU,WAAWK,IAAI,SAE3CP,EAAAlC,EAAAmC,cAAAD,EAAAlC,EAAA8H,SAAA,KACE5F,EAAAlC,EAAAmC,cAAA,QAAMgB,QAAStB,KAAKyF,kBACjB5G,EAAKmC,IAAI,SAAAZ,GAAM,OACdC,EAAAlC,EAAAmC,cAAC4F,EAAD,CAAQ/E,IAAKf,EAAO+F,GAAI/F,OAAQA,MAEhCvB,EAAKwG,OAA4C,KAAnChF,EAAAlC,EAAAmC,cAAA,sCAElBD,EAAAlC,EAAAmC,cAAC8F,EAADpI,OAAA+H,OAAA,CACE9C,YAAajD,KAAKkF,cAClBtG,MAAOoG,GACHD,KAITE,EACC5E,EAAAlC,EAAAmC,cAAC+F,EAAD,CACEC,KAAK,WACLnG,WAAYH,KAAK4F,YACjBxF,OAAQsF,IAER,aA3FMa,aCCEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzG,EAAAlC,EAAAmC,cAACyG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a78fa0e2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GravityAnimating.34068f26.svg\";","let url = new URL(`https://gateway.marvel.com/v1/public/comics`),\n  defaultParams = {\n    ts: '1',\n    apikey: '1136faa63131cec339ae63058b627b70',\n    hash: '7abf5f031a9f3f0031ac8c51fcfe8da0',\n    format: 'comic',\n    formatType: 'comic',\n    noVariants: true,\n    hasDigitalIssue: false,\n  };\n\nexport const getComicsList = async params => {\n  const urlParams = new URLSearchParams({\n    ...defaultParams,\n    ...params,\n  }).toString();\n\n  console.log(`${url}?${urlParams}`);\n\n  const response = await fetch(`${url}?${urlParams}`);\n  const results = await response.json();\n  const { offset, total } = await results.data;\n  const list = await results.data.results;\n  return { list, offset, total };\n};\n","import React from 'react';\nimport './style.scss';\n\nconst Popup = ({ closePopup, comics }) => (\n  <div className=\"popup\">\n    <div className=\"popup_inner\">\n      <div className=\"popup_inner-left\">\n        <img\n          src={`${comics.thumbnail.path}.${comics.thumbnail.extension}`}\n          alt={comics.title}\n        />\n      </div>\n      <div className=\"popup_inner-right\">\n        <h2>{comics.title}</h2>\n        <p>{comics.description}</p>\n        <div className=\"popup_inner-links\">\n          {comics.urls.map((link, index) => (\n            <a key={index} href={link.url}>\n              {link.type}\n            </a>\n          ))}\n        </div>\n      </div>\n      <button onClick={closePopup}>close me</button>\n    </div>\n  </div>\n);\n\nexport default Popup;\n","import React from 'react';\nimport './style.scss';\n\nconst Comics = ({ comics }) => (\n  <div className=\"comics-wrapper\">\n    <div className=\"image\">\n      <img\n        src={`${comics.thumbnail.path}.${comics.thumbnail.extension}`}\n        alt={comics.title}\n      />\n    </div>\n  </div>\n);\n\nexport default Comics;\n","import React from 'react';\nimport './style.scss';\n\nconst Options = ({ optionsValuesArr, description }) =>\n  optionsValuesArr.map(val => (\n    <option key={val} value={val}>\n      {description}: {val}\n    </option>\n  ));\nconst InputWrapper = ({ updateComics, limit, orderBy }) => {\n  let titleStartsWith = React.createRef();\n  const onSubmit = ev => {\n    ev.preventDefault();\n    updateComics({ titleStartsWith: titleStartsWith.current.value });\n  };\n  const onChange = ev => {\n    const { name, value } = ev.target;\n    updateComics({ [name]: value });\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <select\n        onChange={onChange}\n        defaultValue={orderBy}\n        className=\"search__item search__select\"\n        name=\"orderBy\"\n      >\n        <Options\n          optionsValuesArr={['modified', '-modified', 'title', '-title']}\n          description=\"Order by\"\n        />\n      </select>\n      <select\n        onChange={onChange}\n        defaultValue={limit}\n        className=\"search__item search__select\"\n        name=\"limit\"\n      >\n        <Options\n          optionsValuesArr={[10, 20, 30, 40, 50]}\n          description=\"Comics per page\"\n        />\n      </select>\n      <input\n        className=\"search__item search__input\"\n        placeholder=\"title starts with .....\"\n        ref={titleStartsWith}\n      />\n      <button name=\"button\" className=\"search__item search__button\">\n        search\n      </button>\n    </form>\n  );\n};\nexport default InputWrapper;\n","import React from 'react';\nimport { getPager } from '../../utils';\nimport './style.scss';\n\nconst Pagination = ({ limit, offset, total, handleClick }) => {\n  if (total && limit && total > limit) {\n    const { pagesArr, currentPage } = getPager(limit, offset, total);\n\n    const onClick = e => {\n      const pageNumber = e.target.innerHTML;\n      if (\n        e.target.matches('li') &&\n        pageNumber !== '...' &&\n        // eslint-disable-next-line\n        pageNumber != currentPage\n      ) {\n        handleClick({ offset: (pageNumber - 1) * limit });\n      }\n    };\n\n    return (\n      <ul className=\"pagination_list\" onClick={onClick}>\n        {pagesArr.map((page, index) => {\n          return page === currentPage ? (\n            <li className=\"pagination_selected-list-item\" key={index}>\n              {page}\n            </li>\n          ) : (\n            <li key={index}>{page}</li>\n          );\n        })}\n      </ul>\n    );\n  } else {\n    return null;\n  }\n};\nexport default Pagination;\n","export const getPager = (limit, offset, total) => {\n  const getPageNumber = itemsPerPage => Math.ceil(itemsPerPage / limit);\n  let currentPage = getPageNumber(offset) + 1;\n  const lastPage = getPageNumber(total);\n  let pagerSize = 5;\n  pagerSize = pagerSize % 2 ? pagerSize++ : pagerSize;\n  const middleOfPager = Math.ceil(pagerSize / 2);\n  const createOrderedArr = size =>\n    Array.from(new Array(size)).map((el, index) => index + 1);\n  const orderedPagerSizeArr = createOrderedArr(pagerSize);\n  if (lastPage < 1) {\n    return { pagesArr: [], currentPage };\n  }\n  if (1 <= lastPage && lastPage <= pagerSize) {\n    return { pagesArr: createOrderedArr(lastPage), currentPage };\n  }\n  if (lastPage > pagerSize) {\n    if (currentPage <= middleOfPager) {\n      return {\n        pagesArr: [...orderedPagerSizeArr, '...', lastPage],\n        currentPage,\n      };\n    }\n    let pagerArr = orderedPagerSizeArr.map(\n      el => currentPage - middleOfPager + el,\n    );\n\n    if (currentPage === middleOfPager + 1) {\n      return { pagesArr: [1, ...pagerArr, '...', lastPage], currentPage };\n    }\n\n    if (currentPage === lastPage - middleOfPager) {\n      return { pagesArr: [1, '...', ...pagerArr, lastPage], currentPage };\n    }\n    let orderedArrBelowLastPage = orderedPagerSizeArr\n      .map(el => lastPage - el + 1)\n      .reverse();\n    if (currentPage > lastPage - middleOfPager) {\n      return { pagesArr: [1, '...', ...orderedArrBelowLastPage], currentPage };\n    }\n    return { pagesArr: [1, '...', ...pagerArr, '...', lastPage], currentPage };\n  }\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport loader from './GravityAnimating.svg';\n\nimport { getComicsList } from './api';\n\nimport Popup from './components/Popup/Popup';\nimport Comics from './components/Comics/Comics';\nimport InputWrapper from './components/InputWrapper/InputWrapper';\nimport Pagination from './components/Pagination/Pagination';\n\nclass App extends Component {\n  state = {\n    list: [],\n    isLoading: true,\n    comicsListParams: {\n      orderBy: 'modified',\n      limit: 20,\n      offset: 0,\n    },\n    totalPagesComics: 0,\n    showPopup: false,\n  };\n\n  async componentDidMount() {\n    this.getComicsData();\n  }\n\n  getComicsData = async (params = {}) => {\n    const { comicsListParams } = this.state;\n    !params.titleStartsWith && delete params.titleStartsWith;\n    const newComicsListParams = { ...comicsListParams, ...params };\n    this.setState({\n      isLoading: true,\n    });\n    const { list, offset, total } = await getComicsList(newComicsListParams);\n    this.setState({\n      comicsListParams: { ...newComicsListParams, offset },\n      list,\n      totalPagesComics: total,\n      isLoading: false,\n    });\n  };\n\n  popupTargetComic = e => {\n    const title = e.target.alt;\n    if (title) {\n      const targetComics = this.state.list.find(\n        comics => comics.title === title,\n      );\n      this.setState({\n        targetComics,\n      });\n      this.togglePopup();\n    }\n  };\n  togglePopup = () => {\n    this.setState({\n      showPopup: !this.state.showPopup,\n    });\n  };\n  render() {\n    const {\n      list,\n      isLoading,\n      targetComics,\n      showPopup,\n      comicsListParams,\n      totalPagesComics,\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <nav>\n          <InputWrapper\n            updateComics={this.getComicsData}\n            {...comicsListParams}\n          />\n        </nav>\n\n        {isLoading ? (\n          <img src={loader} className=\"App-logo\" alt=\"logo\" />\n        ) : (\n          <>\n            <main onClick={this.popupTargetComic}>\n              {list.map(comics => (\n                <Comics key={comics.id} comics={comics} />\n              ))}\n              {!list.length ? <h2>Oops nothing found \":(\"</h2> : null}\n            </main>\n            <Pagination\n              handleClick={this.getComicsData}\n              total={totalPagesComics}\n              {...comicsListParams}\n            />\n          </>\n        )}\n        {showPopup ? (\n          <Popup\n            text=\"Close Me\"\n            closePopup={this.togglePopup}\n            comics={targetComics}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}